{"version":3,"file":"0.js","sources":["webpack:///./src/components/CertificateSharing/CertificateSharingForm.js","webpack:///./src/components/CertificateSharing/sharing.scss"],"sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { CAPTCHA_CLIENT_KEY } from \"../../config\";\nimport css from \"./sharing.scss\";\nimport { states } from \"../../reducers/certificate\";\n\nclass CertificateSharingForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      captcha: \"\",\n      email: \"\"\n    };\n\n    this.handleCaptchaChange = this.handleCaptchaChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n  }\n\n  handleCaptchaChange(value) {\n    this.setState({ captcha: value });\n  }\n\n  handleEmailChange(event) {\n    this.setState({ email: event.target.value });\n  }\n\n  handleSend() {\n    const { handleSendCertificate, emailSendingState } = this.props;\n    if (emailSendingState !== states.PENDING) {\n      handleSendCertificate({\n        email: this.state.email,\n        captcha: this.state.captcha\n      });\n    }\n  }\n\n  render() {\n    const { emailSendingState } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-2\" />\n          <div className=\"col-8\">\n            <div className=\"row d-flex justify-content-center\">\n              <h4>Send your certificate</h4>\n            </div>\n            <div className=\"row text-center\">\n              This sends an email with your .opencert attached, and instructions\n              on how to view it.\n            </div>\n            <div className=\"row my-4 d-flex justify-content-center\">\n              <input\n                className=\"w-100\"\n                value={this.state.emailAddress}\n                onChange={this.handleEmailChange}\n                placeholder=\"Enter recipient's email\"\n              />\n            </div>\n            <div className=\"row d-flex justify-content-center m-3\">\n              <ReCAPTCHA\n                sitekey={CAPTCHA_CLIENT_KEY}\n                onChange={this.handleCaptchaChange}\n              />\n            </div>\n            {emailSendingState === states.SUCCESS ? (\n              <div className=\"row my-4 d-flex justify-content-center\">\n                Email successfully sent!\n              </div>\n            ) : (\n              \"\"\n            )}\n            {emailSendingState === states.FAILURE ? (\n              <div className=\"row my-4 d-flex justify-content-center\">\n                An error occured, please check your email and captcha\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div className=\"row d-flex justify-content-center m-3\">\n              <button\n                type=\"button\"\n                className={`pointer ${css.btn}`}\n                onClick={this.handleSend}\n              >\n                Send\n                {emailSendingState === states.PENDING ? (\n                  <i className=\"ml-2 fas fa-spinner fa-pulse\" />\n                ) : (\n                  \"\"\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nCertificateSharingForm.propTypes = {\n  emailSendingState: PropTypes.string,\n  handleSendCertificate: PropTypes.func,\n  handleSharingToggle: PropTypes.func\n};\n\nexport default CertificateSharingForm;\n","module.exports = {\n\t\"btn\": \"_31j3eqaUUa7CO2_fxmmsk4\"\n};"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AA7FA;AACA;AA8FA;AACA;AACA;AACA;AAHA;AAMA;;;;;;;;;;;AC5GA;AACA;AACA;;;;A","sourceRoot":""}