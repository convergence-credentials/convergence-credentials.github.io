{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/home/ajl/development/ssi/academic-creds/convergence-credentials.github.io/src/components/HomePageContent/DropZoneSection.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport CertificateDropzone from \"../CertificateDropZone\";\nimport css from \"./dropZoneSection.scss\";\nimport { updateCertificate as _updateCertificate } from \"../../reducers/certificate\";\nimport { trace } from \"../../utils/logger\";\nimport { IS_MAINNET } from \"../../config\";\nimport MAIN from \"./Main-Demo\";\nimport ROPSTEN from \"./Ropsten-Demo\";\nimport { analyticsEvent } from \"../Analytics/index\";\nvar DEMO_CERT = IS_MAINNET ? MAIN : ROPSTEN;\nvar DEMO_CONTENT_KEY = \"DEMO_CONTENT\";\n\nfunction demoCount() {\n  analyticsEvent(window, {\n    category: \"USER_INTERACTION\",\n    action: \"DEMO_CERTIFICATE_VIEWED\"\n  });\n}\n\nvar DraggableDemoCertificate = function DraggableDemoCertificate() {\n  return __jsx(\"div\", {\n    className: \"d-none d-lg-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: css.pulse,\n    draggable: \"true\",\n    onDragStart: function onDragStart(e) {\n      return e.dataTransfer.setData(DEMO_CONTENT_KEY, true);\n    },\n    onDragEnd: demoCount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    href: \"data:text/plain;,\".concat(_JSON$stringify(DEMO_CERT, null, 2)),\n    download: \"demo.opencert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    style: {\n      cursor: \"grabbing\"\n    },\n    src: \"/static/images/dropzone/cert.png\",\n    width: \"100%\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })))), __jsx(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: \"/static/images/dropzone/arrow.png\",\n    width: \"100%\",\n    draggable: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), __jsx(\"span\", {\n    style: {\n      textAlign: \"justify\",\n      color: \"#ff9933\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Drag me over here to see a demo certificate and other features\"), __jsx(\"img\", {\n    // src=\"/static/images/convergence.png\"\n    width: \"100%\",\n    draggable: \"false\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))));\n};\n\nvar MobileDemoCertificate = function MobileDemoCertificate() {\n  return __jsx(\"div\", {\n    className: \"d-block d-lg-none d-xl-none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, __jsx(\"a\", {\n    className: \"btn btn-primary btn-lg\",\n    role: \"button\",\n    draggable: \"false\",\n    id: \"demoClick\",\n    style: {\n      background: \"#28a745\",\n      border: \"none\",\n      cursor: \"pointer\"\n    },\n    onClick: demoCount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Click me for a demo certificate!\"));\n};\n\nvar DropZoneSection =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DropZoneSection, _Component);\n\n  function DropZoneSection() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DropZoneSection);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DropZoneSection)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"removeListener\", function () {\n      return trace(\"drop listener removed\");\n    });\n\n    return _this;\n  }\n\n  _createClass(DropZoneSection, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      document.getElementById(\"demoDrop\").addEventListener(\"drop\", function (e) {\n        if (e.dataTransfer.getData(DEMO_CONTENT_KEY)) {\n          _this2.props.updateCertificate(DEMO_CERT);\n        }\n      });\n      document.getElementById(\"demoClick\").addEventListener(\"click\", function () {\n        _this2.props.updateCertificate(DEMO_CERT);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this3 = this;\n\n      document.getElementById(\"demoDrop\", \"demoClick\").removeEventListener(\"drop\", function () {\n        return _this3.removeListener();\n      });\n    }\n  }, {\n    key: \"render\",\n    // eslint-disable-next-line class-methods-use-this\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"row p-5 bg-brand-dark text-white\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: css.main,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"col-lg-5 col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: css.description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"An easy way to check and verify your certificates\"), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Whether you're a student or an employer, Convergence lets you verify the certificates you have of anyone from any institution. All in one place.\"), __jsx(DraggableDemoCertificate, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), __jsx(MobileDemoCertificate, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }))), __jsx(\"div\", {\n        className: \"col-lg-7 col-md-12 col-sm-12\",\n        id: \"demoDrop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, __jsx(CertificateDropzone, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return DropZoneSection;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateCertificate: function updateCertificate(payload) {\n      return dispatch(_updateCertificate(payload));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(DropZoneSection);\nDropZoneSection.propTypes = {\n  updateCertificate: PropTypes.func\n};","map":{"version":3,"sources":["/home/ajl/development/ssi/academic-creds/convergence-credentials.github.io/src/components/HomePageContent/DropZoneSection.js"],"names":["React","Component","connect","PropTypes","CertificateDropzone","css","updateCertificate","trace","IS_MAINNET","MAIN","ROPSTEN","analyticsEvent","DEMO_CERT","DEMO_CONTENT_KEY","demoCount","window","category","action","DraggableDemoCertificate","pulse","e","dataTransfer","setData","cursor","textAlign","color","MobileDemoCertificate","background","border","DropZoneSection","document","getElementById","addEventListener","getData","props","removeEventListener","removeListener","main","description","mapDispatchToProps","dispatch","payload","propTypes","func"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport CertificateDropzone from \"../CertificateDropZone\";\nimport css from \"./dropZoneSection.scss\";\nimport { updateCertificate } from \"../../reducers/certificate\";\nimport { trace } from \"../../utils/logger\";\nimport { IS_MAINNET } from \"../../config\";\nimport MAIN from \"./Main-Demo\";\nimport ROPSTEN from \"./Ropsten-Demo\";\nimport { analyticsEvent } from \"../Analytics/index\";\n\nconst DEMO_CERT = IS_MAINNET ? MAIN : ROPSTEN;\nconst DEMO_CONTENT_KEY = \"DEMO_CONTENT\";\n\nfunction demoCount() {\n  analyticsEvent(window, {\n    category: \"USER_INTERACTION\",\n    action: \"DEMO_CERTIFICATE_VIEWED\"\n  });\n}\n\nconst DraggableDemoCertificate = () => (\n  <div className=\"d-none d-lg-block\">\n    <div className=\"row\">\n      <div className=\"col\">\n        <div\n          className={css.pulse}\n          draggable=\"true\"\n          onDragStart={e => e.dataTransfer.setData(DEMO_CONTENT_KEY, true)}\n          onDragEnd={demoCount}\n        >\n          <a\n            href={`data:text/plain;,${JSON.stringify(DEMO_CERT, null, 2)}`}\n            download=\"demo.opencert\"\n          >\n            <img\n              style={{ cursor: \"grabbing\" }}\n              src=\"/static/images/dropzone/cert.png\"\n              width=\"100%\"\n            />\n          </a>\n        </div>\n      </div>\n      <div className=\"col\">\n        <img\n          src=\"/static/images/dropzone/arrow.png\"\n          width=\"100%\"\n          draggable=\"false\"\n        />\n        <span\n          style={{\n            textAlign: \"justify\",\n            color: \"#ff9933\"\n          }}\n        >\n          Drag me over here to see a demo certificate and other features\n        </span>\n        <img\n          // src=\"/static/images/convergence.png\"\n          width=\"100%\"\n          draggable=\"false\"\n        />\n      </div>\n    </div>\n  </div>\n);\n\nconst MobileDemoCertificate = () => (\n  <div className=\"d-block d-lg-none d-xl-none\">\n    <a\n      className=\"btn btn-primary btn-lg\"\n      role=\"button\"\n      draggable=\"false\"\n      id=\"demoClick\"\n      style={{\n        background: \"#28a745\",\n        border: \"none\",\n        cursor: \"pointer\"\n      }}\n      onClick={demoCount}\n    >\n      Click me for a demo certificate!\n    </a>\n  </div>\n);\n\nclass DropZoneSection extends Component {\n  componentDidMount() {\n    document.getElementById(\"demoDrop\").addEventListener(\"drop\", e => {\n      if (e.dataTransfer.getData(DEMO_CONTENT_KEY)) {\n        this.props.updateCertificate(DEMO_CERT);\n      }\n    });\n    document.getElementById(\"demoClick\").addEventListener(\"click\", () => {\n      this.props.updateCertificate(DEMO_CERT);\n    });\n  }\n\n  componentWillUnmount() {\n    document\n      .getElementById(\"demoDrop\", \"demoClick\")\n      .removeEventListener(\"drop\", () => this.removeListener());\n  }\n\n  removeListener = () => trace(\"drop listener removed\");\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    return (\n      <div className=\"row p-5 bg-brand-dark text-white\">\n        <div className={css.main}>\n          <div className=\"col-lg-5 col-md-12\">\n            <div className={css.description}>\n              <h1>An easy way to check and verify your certificates</h1>\n              <p>\n                Whether you&#39;re a student or an employer, Convergence lets you\n                verify the certificates you have of anyone from any institution.\n                All in one place.\n              </p>\n              <DraggableDemoCertificate />\n              <MobileDemoCertificate />\n            </div>\n          </div>\n          <div className=\"col-lg-7 col-md-12 col-sm-12\" id=\"demoDrop\">\n            <CertificateDropzone />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCertificate: payload => dispatch(updateCertificate(payload))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(DropZoneSection);\n\nDropZoneSection.propTypes = {\n  updateCertificate: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}