{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ajl/development/ssi/academic-creds/convergence-credentials.github.io/src/components/ViewerPageContainer.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Router from \"next/router\";\nimport { getData } from \"@govtechsg/open-attestation\";\nimport { updateCertificate as _updateCertificate, sendCertificate as _sendCertificate, sendCertificateReset as _sendCertificateReset, getCertificate, getVerifying, getIssuerIdentityStatus, getHashStatus, getIssuedStatus, getNotRevokedStatus, getVerified, getEmailSendingState, updateObfuscatedCertificate as _updateObfuscatedCertificate } from \"../reducers/certificate\";\nimport CertificateViewer from \"./CertificateViewer\";\n\nvar MainPageContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainPageContainer, _Component);\n\n  function MainPageContainer(props) {\n    var _this;\n\n    _classCallCheck(this, MainPageContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MainPageContainer).call(this, props));\n    _this.state = {\n      showSharing: false,\n      detailedVerifyVisible: false\n    };\n    _this.toggleDetailedView = _this.toggleDetailedView.bind(_assertThisInitialized(_this));\n    _this.handleCertificateChange = _this.handleCertificateChange.bind(_assertThisInitialized(_this));\n    _this.handleSharingToggle = _this.handleSharingToggle.bind(_assertThisInitialized(_this));\n    _this.handleSendCertificate = _this.handleSendCertificate.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(MainPageContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var document = this.props.document;\n      console.log(document);\n\n      if (!document) {\n        Router.replace(\"/\");\n      }\n    }\n  }, {\n    key: \"handleSharingToggle\",\n    value: function handleSharingToggle() {\n      this.props.sendCertificateReset();\n      this.setState({\n        showSharing: !this.state.showSharing\n      });\n    }\n  }, {\n    key: \"toggleDetailedView\",\n    value: function toggleDetailedView() {\n      this.setState({\n        detailedVerifyVisible: !this.state.detailedVerifyVisible\n      });\n    }\n  }, {\n    key: \"handleCertificateChange\",\n    value: function handleCertificateChange(certificate) {\n      this.props.updateCertificate(certificate);\n    }\n  }, {\n    key: \"handleSendCertificate\",\n    value: function handleSendCertificate(_ref) {\n      var email = _ref.email,\n          captcha = _ref.captcha;\n      this.props.sendCertificate({\n        email: email,\n        captcha: captcha\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.document) return null;\n      return __jsx(CertificateViewer, {\n        document: this.props.document,\n        certificate: getData(this.props.document),\n        verifying: this.props.verifying,\n        hashStatus: this.props.hashStatus,\n        issuedStatus: this.props.issuedStatus,\n        notRevokedStatus: this.props.notRevokedStatus,\n        issuerIdentityStatus: this.props.issuerIdentityStatus,\n        handleCertificateChange: this.handleCertificateChange,\n        showSharing: this.state.showSharing,\n        emailAddress: this.state.emailAddress,\n        handleSendCertificate: this.handleSendCertificate,\n        handleSharingToggle: this.handleSharingToggle,\n        emailSendingState: this.props.emailSendingState,\n        toggleDetailedView: this.toggleDetailedView,\n        detailedVerifyVisible: this.state.detailedVerifyVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return MainPageContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    document: getCertificate(store),\n    // Verification statuses used in verifier block\n    emailSendingState: getEmailSendingState(store),\n    verifying: getVerifying(store),\n    issuerIdentityStatus: getIssuerIdentityStatus(store),\n    hashStatus: getHashStatus(store),\n    issuedStatus: getIssuedStatus(store),\n    notRevokedStatus: getNotRevokedStatus(store),\n    verified: getVerified(store)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateCertificate: function updateCertificate(payload) {\n      return dispatch(_updateCertificate(payload));\n    },\n    sendCertificate: function sendCertificate(payload) {\n      return dispatch(_sendCertificate(payload));\n    },\n    sendCertificateReset: function sendCertificateReset() {\n      return dispatch(_sendCertificateReset());\n    },\n    updateObfuscatedCertificate: function updateObfuscatedCertificate(updatedDoc) {\n      return dispatch(_updateObfuscatedCertificate(updatedDoc));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPageContainer);\nMainPageContainer.propTypes = {\n  updateCertificate: PropTypes.func,\n  document: PropTypes.object,\n  certificate: PropTypes.object,\n  verifying: PropTypes.bool,\n  hashStatus: PropTypes.object,\n  issuedStatus: PropTypes.object,\n  notRevokedStatus: PropTypes.object,\n  issuerIdentityStatus: PropTypes.object,\n  verified: PropTypes.bool,\n  emailSendingState: PropTypes.string,\n  sendCertificate: PropTypes.func,\n  sendCertificateReset: PropTypes.func,\n  updateObfuscatedCertificate: PropTypes.func\n};","map":{"version":3,"sources":["/home/ajl/development/ssi/academic-creds/convergence-credentials.github.io/src/components/ViewerPageContainer.js"],"names":["React","Component","PropTypes","connect","Router","getData","updateCertificate","sendCertificate","sendCertificateReset","getCertificate","getVerifying","getIssuerIdentityStatus","getHashStatus","getIssuedStatus","getNotRevokedStatus","getVerified","getEmailSendingState","updateObfuscatedCertificate","CertificateViewer","MainPageContainer","props","state","showSharing","detailedVerifyVisible","toggleDetailedView","bind","handleCertificateChange","handleSharingToggle","handleSendCertificate","document","console","log","replace","setState","certificate","email","captcha","verifying","hashStatus","issuedStatus","notRevokedStatus","issuerIdentityStatus","emailAddress","emailSendingState","mapStateToProps","store","verified","mapDispatchToProps","dispatch","payload","updatedDoc","propTypes","func","object","bool","string"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Router from \"next/router\";\nimport { getData } from \"@govtechsg/open-attestation\";\n\nimport {\n  updateCertificate,\n  sendCertificate,\n  sendCertificateReset,\n  getCertificate,\n  getVerifying,\n  getIssuerIdentityStatus,\n  getHashStatus,\n  getIssuedStatus,\n  getNotRevokedStatus,\n  getVerified,\n  getEmailSendingState,\n  updateObfuscatedCertificate\n} from \"../reducers/certificate\";\nimport CertificateViewer from \"./CertificateViewer\";\n\nclass MainPageContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showSharing: false,\n      detailedVerifyVisible: false\n    };\n    this.toggleDetailedView = this.toggleDetailedView.bind(this);\n    this.handleCertificateChange = this.handleCertificateChange.bind(this);\n    this.handleSharingToggle = this.handleSharingToggle.bind(this);\n    this.handleSendCertificate = this.handleSendCertificate.bind(this);\n  }\n\n  componentDidMount() {\n    const { document } = this.props;\n\n    console.log(document)\n\n    if (!document) {\n      Router.replace(\"/\");\n    }\n  }\n\n  handleSharingToggle() {\n    this.props.sendCertificateReset();\n    this.setState({ showSharing: !this.state.showSharing });\n  }\n\n  toggleDetailedView() {\n    this.setState({\n      detailedVerifyVisible: !this.state.detailedVerifyVisible\n    });\n  }\n\n  handleCertificateChange(certificate) {\n    this.props.updateCertificate(certificate);\n  }\n\n  handleSendCertificate({ email, captcha }) {\n    this.props.sendCertificate({ email, captcha });\n  }\n\n  render() {\n    if (!this.props.document) return null;\n    return (\n      <CertificateViewer\n        document={this.props.document}\n        certificate={getData(this.props.document)}\n        verifying={this.props.verifying}\n        hashStatus={this.props.hashStatus}\n        issuedStatus={this.props.issuedStatus}\n        notRevokedStatus={this.props.notRevokedStatus}\n        issuerIdentityStatus={this.props.issuerIdentityStatus}\n        handleCertificateChange={this.handleCertificateChange}\n        showSharing={this.state.showSharing}\n        emailAddress={this.state.emailAddress}\n        handleSendCertificate={this.handleSendCertificate}\n        handleSharingToggle={this.handleSharingToggle}\n        emailSendingState={this.props.emailSendingState}\n        toggleDetailedView={this.toggleDetailedView}\n        detailedVerifyVisible={this.state.detailedVerifyVisible}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  document: getCertificate(store),\n\n  // Verification statuses used in verifier block\n  emailSendingState: getEmailSendingState(store),\n  verifying: getVerifying(store),\n  issuerIdentityStatus: getIssuerIdentityStatus(store),\n  hashStatus: getHashStatus(store),\n  issuedStatus: getIssuedStatus(store),\n  notRevokedStatus: getNotRevokedStatus(store),\n\n  verified: getVerified(store)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateCertificate: payload => dispatch(updateCertificate(payload)),\n  sendCertificate: payload => dispatch(sendCertificate(payload)),\n  sendCertificateReset: () => dispatch(sendCertificateReset()),\n  updateObfuscatedCertificate: updatedDoc =>\n    dispatch(updateObfuscatedCertificate(updatedDoc))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MainPageContainer);\n\nMainPageContainer.propTypes = {\n  updateCertificate: PropTypes.func,\n  document: PropTypes.object,\n  certificate: PropTypes.object,\n  verifying: PropTypes.bool,\n  hashStatus: PropTypes.object,\n  issuedStatus: PropTypes.object,\n  notRevokedStatus: PropTypes.object,\n  issuerIdentityStatus: PropTypes.object,\n  verified: PropTypes.bool,\n  emailSendingState: PropTypes.string,\n  sendCertificate: PropTypes.func,\n  sendCertificateReset: PropTypes.func,\n  updateObfuscatedCertificate: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}