{"ast":null,"code":"var _jsxFileName = \"/home/ajl/development/ssi/academic-creds/convergence-credentials.github.io/src/components/CertificateSharing/CertificateSharingForm.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { CAPTCHA_CLIENT_KEY } from \"../../config\";\nimport css from \"./sharing.scss\";\nimport { states } from \"../../reducers/certificate\";\n\nclass CertificateSharingForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      captcha: \"\",\n      email: \"\"\n    };\n    this.handleCaptchaChange = this.handleCaptchaChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n  }\n\n  handleCaptchaChange(value) {\n    this.setState({\n      captcha: value\n    });\n  }\n\n  handleEmailChange(event) {\n    this.setState({\n      email: event.target.value\n    });\n  }\n\n  handleSend() {\n    const {\n      handleSendCertificate,\n      emailSendingState\n    } = this.props;\n\n    if (emailSendingState !== states.PENDING) {\n      handleSendCertificate({\n        email: this.state.email,\n        captcha: this.state.captcha\n      });\n    }\n  }\n\n  render() {\n    const {\n      emailSendingState\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"row d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Send your certificate\")), __jsx(\"div\", {\n      className: \"row text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"This sends an email with your .opencert attached, and instructions on how to view it.\"), __jsx(\"div\", {\n      className: \"row my-4 d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      className: \"w-100\",\n      value: this.state.emailAddress,\n      onChange: this.handleEmailChange,\n      placeholder: \"Enter recipient's email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"row d-flex justify-content-center m-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(ReCAPTCHA, {\n      sitekey: CAPTCHA_CLIENT_KEY,\n      onChange: this.handleCaptchaChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), emailSendingState === states.SUCCESS ? __jsx(\"div\", {\n      className: \"row my-4 d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Email successfully sent!\") : \"\", emailSendingState === states.FAILURE ? __jsx(\"div\", {\n      className: \"row my-4 d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"An error occured, please check your email and captcha\") : \"\", __jsx(\"div\", {\n      className: \"row d-flex justify-content-center m-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      type: \"button\",\n      className: `pointer ${css.btn}`,\n      onClick: this.handleSend,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Send\", emailSendingState === states.PENDING ? __jsx(\"i\", {\n      className: \"ml-2 fas fa-spinner fa-pulse\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }) : \"\")))));\n  }\n\n}\n\nCertificateSharingForm.propTypes = {\n  emailSendingState: PropTypes.string,\n  handleSendCertificate: PropTypes.func,\n  handleSharingToggle: PropTypes.func\n};\nexport default CertificateSharingForm;","map":{"version":3,"sources":["/home/ajl/development/ssi/academic-creds/convergence-credentials.github.io/src/components/CertificateSharing/CertificateSharingForm.js"],"names":["React","Component","PropTypes","ReCAPTCHA","CAPTCHA_CLIENT_KEY","css","states","CertificateSharingForm","constructor","props","state","captcha","email","handleCaptchaChange","bind","handleEmailChange","handleSend","value","setState","event","target","handleSendCertificate","emailSendingState","PENDING","render","emailAddress","SUCCESS","FAILURE","btn","propTypes","string","func","handleSharingToggle"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport { CAPTCHA_CLIENT_KEY } from \"../../config\";\nimport css from \"./sharing.scss\";\nimport { states } from \"../../reducers/certificate\";\n\nclass CertificateSharingForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      captcha: \"\",\n      email: \"\"\n    };\n\n    this.handleCaptchaChange = this.handleCaptchaChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.handleSend = this.handleSend.bind(this);\n  }\n\n  handleCaptchaChange(value) {\n    this.setState({ captcha: value });\n  }\n\n  handleEmailChange(event) {\n    this.setState({ email: event.target.value });\n  }\n\n  handleSend() {\n    const { handleSendCertificate, emailSendingState } = this.props;\n    if (emailSendingState !== states.PENDING) {\n      handleSendCertificate({\n        email: this.state.email,\n        captcha: this.state.captcha\n      });\n    }\n  }\n\n  render() {\n    const { emailSendingState } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-2\" />\n          <div className=\"col-8\">\n            <div className=\"row d-flex justify-content-center\">\n              <h4>Send your certificate</h4>\n            </div>\n            <div className=\"row text-center\">\n              This sends an email with your .opencert attached, and instructions\n              on how to view it.\n            </div>\n            <div className=\"row my-4 d-flex justify-content-center\">\n              <input\n                className=\"w-100\"\n                value={this.state.emailAddress}\n                onChange={this.handleEmailChange}\n                placeholder=\"Enter recipient's email\"\n              />\n            </div>\n            <div className=\"row d-flex justify-content-center m-3\">\n              <ReCAPTCHA\n                sitekey={CAPTCHA_CLIENT_KEY}\n                onChange={this.handleCaptchaChange}\n              />\n            </div>\n            {emailSendingState === states.SUCCESS ? (\n              <div className=\"row my-4 d-flex justify-content-center\">\n                Email successfully sent!\n              </div>\n            ) : (\n              \"\"\n            )}\n            {emailSendingState === states.FAILURE ? (\n              <div className=\"row my-4 d-flex justify-content-center\">\n                An error occured, please check your email and captcha\n              </div>\n            ) : (\n              \"\"\n            )}\n            <div className=\"row d-flex justify-content-center m-3\">\n              <button\n                type=\"button\"\n                className={`pointer ${css.btn}`}\n                onClick={this.handleSend}\n              >\n                Send\n                {emailSendingState === states.PENDING ? (\n                  <i className=\"ml-2 fas fa-spinner fa-pulse\" />\n                ) : (\n                  \"\"\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nCertificateSharingForm.propTypes = {\n  emailSendingState: PropTypes.string,\n  handleSendCertificate: PropTypes.func,\n  handleSharingToggle: PropTypes.func\n};\n\nexport default CertificateSharingForm;\n"]},"metadata":{},"sourceType":"module"}