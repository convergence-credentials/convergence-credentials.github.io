{"ast":null,"code":"import { getLogger } from \"../../utils/logger\";\n\nvar _getLogger = getLogger(\"components:Analytics:\"),\n    trace = _getLogger.trace;\n\nvar _getLogger2 = getLogger(\"components:Analytics(Inactive):\"),\n    traceDev = _getLogger2.trace;\n\nexport var validateEvent = function validateEvent(_ref) {\n  var category = _ref.category,\n      action = _ref.action,\n      value = _ref.value;\n  if (!category) throw new Error(\"Category is required\");\n  if (!action) throw new Error(\"Action is required\");\n  if (value && typeof value !== \"number\") throw new Error(\"Value must be a number\");\n};\nexport var stringifyEvent = function stringifyEvent(_ref2) {\n  var category = _ref2.category,\n      action = _ref2.action,\n      label = _ref2.label,\n      value = _ref2.value;\n  return \"Category*: \".concat(category, \", Action*: \").concat(action, \", Label: \").concat(label, \", Value: \").concat(value);\n};\nexport var analyticsEvent = function analyticsEvent(window, evt) {\n  validateEvent(evt);\n\n  if (true && typeof window.ga !== \"undefined\") {\n    var category = evt.category,\n        action = evt.action,\n        label = evt.label,\n        value = evt.value;\n    trace(stringifyEvent(evt));\n    return window.ga(\"send\", \"event\", category, action, label, value);\n  }\n\n  traceDev(stringifyEvent(evt));\n  return null;\n};\nexport default analyticsEvent;","map":{"version":3,"sources":["/home/ajl/development/ssi/academic-creds/convergence-credentials.github.io/src/components/Analytics/index.js"],"names":["getLogger","trace","traceDev","validateEvent","category","action","value","Error","stringifyEvent","label","analyticsEvent","window","evt","ga"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;;iBAEkBA,SAAS,CAAC,uBAAD,C;IAAnBC,K,cAAAA,K;;kBACoBD,SAAS,CAAC,iCAAD,C;IAAtBE,Q,eAAPD,K;;AAER,OAAO,IAAME,aAAa,GAAG,SAAhBA,aAAgB,OAAiC;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,MAApBC,MAAoB,QAApBA,MAAoB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC5D,MAAI,CAACF,QAAL,EAAe,MAAM,IAAIG,KAAJ,CAAU,sBAAV,CAAN;AACf,MAAI,CAACF,MAAL,EAAa,MAAM,IAAIE,KAAJ,CAAU,oBAAV,CAAN;AACb,MAAID,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EACE,MAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;AACH,CALM;AAOP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAGJ,QAAH,SAAGA,QAAH;AAAA,MAAaC,MAAb,SAAaA,MAAb;AAAA,MAAqBI,KAArB,SAAqBA,KAArB;AAAA,MAA4BH,KAA5B,SAA4BA,KAA5B;AAAA,8BACdF,QADc,wBACQC,MADR,sBAC0BI,KAD1B,sBAC2CH,KAD3C;AAAA,CAAvB;AAGP,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAASC,GAAT,EAAiB;AAC7CT,EAAAA,aAAa,CAACS,GAAD,CAAb;;AACA,MAAI,QAAiC,OAAOD,MAAM,CAACE,EAAd,KAAqB,WAA1D,EAAuE;AAAA,QAC7DT,QAD6D,GAC1BQ,GAD0B,CAC7DR,QAD6D;AAAA,QACnDC,MADmD,GAC1BO,GAD0B,CACnDP,MADmD;AAAA,QAC3CI,KAD2C,GAC1BG,GAD0B,CAC3CH,KAD2C;AAAA,QACpCH,KADoC,GAC1BM,GAD0B,CACpCN,KADoC;AAErEL,IAAAA,KAAK,CAACO,cAAc,CAACI,GAAD,CAAf,CAAL;AACA,WAAOD,MAAM,CAACE,EAAP,CAAU,MAAV,EAAkB,OAAlB,EAA2BT,QAA3B,EAAqCC,MAArC,EAA6CI,KAA7C,EAAoDH,KAApD,CAAP;AACD;;AACDJ,EAAAA,QAAQ,CAACM,cAAc,CAACI,GAAD,CAAf,CAAR;AACA,SAAO,IAAP;AACD,CATM;AAWP,eAAeF,cAAf","sourcesContent":["import { getLogger } from \"../../utils/logger\";\n\nconst { trace } = getLogger(\"components:Analytics:\");\nconst { trace: traceDev } = getLogger(\"components:Analytics(Inactive):\");\n\nexport const validateEvent = ({ category, action, value }) => {\n  if (!category) throw new Error(\"Category is required\");\n  if (!action) throw new Error(\"Action is required\");\n  if (value && typeof value !== \"number\")\n    throw new Error(\"Value must be a number\");\n};\n\nexport const stringifyEvent = ({ category, action, label, value }) =>\n  `Category*: ${category}, Action*: ${action}, Label: ${label}, Value: ${value}`;\n\nexport const analyticsEvent = (window, evt) => {\n  validateEvent(evt);\n  if (typeof window !== \"undefined\" && typeof window.ga !== \"undefined\") {\n    const { category, action, label, value } = evt;\n    trace(stringifyEvent(evt));\n    return window.ga(\"send\", \"event\", category, action, label, value);\n  }\n  traceDev(stringifyEvent(evt));\n  return null;\n};\n\nexport default analyticsEvent;\n"]},"metadata":{},"sourceType":"module"}