{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(rootSaga);\n\nimport { all } from \"redux-saga/effects\";\nimport applicationSaga from \"./application\";\nimport certificateSaga from \"./certificate\";\n\nfunction rootSaga() {\n  return _regeneratorRuntime.wrap(function rootSaga$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return all([].concat(_toConsumableArray(applicationSaga), _toConsumableArray(certificateSaga)));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport default rootSaga;","map":{"version":3,"sources":["/home/ajl/development/ssi/academic-creds/convergence-credentials.github.io/src/sagas/index.js"],"names":["rootSaga","all","applicationSaga","certificateSaga"],"mappings":";;;;;yBAIUA,Q;;AAJV,SAASC,GAAT,QAAoB,oBAApB;AACA,OAAOC,eAAP,MAA4B,eAA5B;AACA,OAAOC,eAAP,MAA4B,eAA5B;;AAEA,SAAUH,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMC,GAAG,8BAAKC,eAAL,sBAAyBC,eAAzB,GAAT;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAeH,QAAf","sourcesContent":["import { all } from \"redux-saga/effects\";\nimport applicationSaga from \"./application\";\nimport certificateSaga from \"./certificate\";\n\nfunction* rootSaga() {\n  yield all([...applicationSaga, ...certificateSaga]);\n}\n\nexport default rootSaga;\n"]},"metadata":{},"sourceType":"module"}