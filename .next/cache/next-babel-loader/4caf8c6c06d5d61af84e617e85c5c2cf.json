{"ast":null,"code":"import { getLogger } from \"../../utils/logger\";\nconst {\n  trace\n} = getLogger(\"components:Analytics:\");\nconst {\n  trace: traceDev\n} = getLogger(\"components:Analytics(Inactive):\");\nexport const validateEvent = ({\n  category,\n  action,\n  value\n}) => {\n  if (!category) throw new Error(\"Category is required\");\n  if (!action) throw new Error(\"Action is required\");\n  if (value && typeof value !== \"number\") throw new Error(\"Value must be a number\");\n};\nexport const stringifyEvent = ({\n  category,\n  action,\n  label,\n  value\n}) => `Category*: ${category}, Action*: ${action}, Label: ${label}, Value: ${value}`;\nexport const analyticsEvent = (window, evt) => {\n  validateEvent(evt);\n\n  if (false && typeof window.ga !== \"undefined\") {\n    const {\n      category,\n      action,\n      label,\n      value\n    } = evt;\n    trace(stringifyEvent(evt));\n    return window.ga(\"send\", \"event\", category, action, label, value);\n  }\n\n  traceDev(stringifyEvent(evt));\n  return null;\n};\nexport default analyticsEvent;","map":{"version":3,"sources":["/home/ajl/development/ssi/academic-creds/convergence-credentials.github.io/src/components/Analytics/index.js"],"names":["getLogger","trace","traceDev","validateEvent","category","action","value","Error","stringifyEvent","label","analyticsEvent","window","evt","ga"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYD,SAAS,CAAC,uBAAD,CAA3B;AACA,MAAM;AAAEC,EAAAA,KAAK,EAAEC;AAAT,IAAsBF,SAAS,CAAC,iCAAD,CAArC;AAEA,OAAO,MAAMG,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAAD,KAAiC;AAC5D,MAAI,CAACF,QAAL,EAAe,MAAM,IAAIG,KAAJ,CAAU,sBAAV,CAAN;AACf,MAAI,CAACF,MAAL,EAAa,MAAM,IAAIE,KAAJ,CAAU,oBAAV,CAAN;AACb,MAAID,KAAK,IAAI,OAAOA,KAAP,KAAiB,QAA9B,EACE,MAAM,IAAIC,KAAJ,CAAU,wBAAV,CAAN;AACH,CALM;AAOP,OAAO,MAAMC,cAAc,GAAG,CAAC;AAAEJ,EAAAA,QAAF;AAAYC,EAAAA,MAAZ;AAAoBI,EAAAA,KAApB;AAA2BH,EAAAA;AAA3B,CAAD,KAC3B,cAAaF,QAAS,cAAaC,MAAO,YAAWI,KAAM,YAAWH,KAAM,EADxE;AAGP,OAAO,MAAMI,cAAc,GAAG,CAACC,MAAD,EAASC,GAAT,KAAiB;AAC7CT,EAAAA,aAAa,CAACS,GAAD,CAAb;;AACA,MAAI,SAAiC,OAAOD,MAAM,CAACE,EAAd,KAAqB,WAA1D,EAAuE;AACrE,UAAM;AAAET,MAAAA,QAAF;AAAYC,MAAAA,MAAZ;AAAoBI,MAAAA,KAApB;AAA2BH,MAAAA;AAA3B,QAAqCM,GAA3C;AACAX,IAAAA,KAAK,CAACO,cAAc,CAACI,GAAD,CAAf,CAAL;AACA,WAAOD,MAAM,CAACE,EAAP,CAAU,MAAV,EAAkB,OAAlB,EAA2BT,QAA3B,EAAqCC,MAArC,EAA6CI,KAA7C,EAAoDH,KAApD,CAAP;AACD;;AACDJ,EAAAA,QAAQ,CAACM,cAAc,CAACI,GAAD,CAAf,CAAR;AACA,SAAO,IAAP;AACD,CATM;AAWP,eAAeF,cAAf","sourcesContent":["import { getLogger } from \"../../utils/logger\";\n\nconst { trace } = getLogger(\"components:Analytics:\");\nconst { trace: traceDev } = getLogger(\"components:Analytics(Inactive):\");\n\nexport const validateEvent = ({ category, action, value }) => {\n  if (!category) throw new Error(\"Category is required\");\n  if (!action) throw new Error(\"Action is required\");\n  if (value && typeof value !== \"number\")\n    throw new Error(\"Value must be a number\");\n};\n\nexport const stringifyEvent = ({ category, action, label, value }) =>\n  `Category*: ${category}, Action*: ${action}, Label: ${label}, Value: ${value}`;\n\nexport const analyticsEvent = (window, evt) => {\n  validateEvent(evt);\n  if (typeof window !== \"undefined\" && typeof window.ga !== \"undefined\") {\n    const { category, action, label, value } = evt;\n    trace(stringifyEvent(evt));\n    return window.ga(\"send\", \"event\", category, action, label, value);\n  }\n  traceDev(stringifyEvent(evt));\n  return null;\n};\n\nexport default analyticsEvent;\n"]},"metadata":{},"sourceType":"module"}