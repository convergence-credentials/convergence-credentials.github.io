{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\n// Wrap web3.eth.getAccounts in a Promise\nexport var getAccounts = function getAccounts(web3) {\n  return new _Promise(function (resolve, reject) {\n    web3.eth.getAccounts(function (error, accounts) {\n      return error ? reject(error) : resolve(accounts);\n    });\n  });\n};\nexport default getAccounts;","map":{"version":3,"sources":["/home/ajl/development/ssi/academic-creds/convergence-credentials.github.io/src/services/web3/getAccounts.js"],"names":["getAccounts","web3","resolve","reject","eth","error","accounts"],"mappings":";AAAA;AACA,OAAO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI;AAAA,SAC7B,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/BF,IAAAA,IAAI,CAACG,GAAL,CAASJ,WAAT,CAAqB,UAACK,KAAD,EAAQC,QAAR;AAAA,aACnBD,KAAK,GAAGF,MAAM,CAACE,KAAD,CAAT,GAAmBH,OAAO,CAACI,QAAD,CADZ;AAAA,KAArB;AAGD,GAJD,CAD6B;AAAA,CAAxB;AAOP,eAAeN,WAAf","sourcesContent":["// Wrap web3.eth.getAccounts in a Promise\nexport const getAccounts = web3 =>\n  new Promise((resolve, reject) => {\n    web3.eth.getAccounts((error, accounts) =>\n      error ? reject(error) : resolve(accounts)\n    );\n  });\n\nexport default getAccounts;\n"]},"metadata":{},"sourceType":"module"}