{"ast":null,"code":"import getConfig from \"next/config\";\nimport { getLogger } from \"../utils/logger\";\n\nvar _getLogger = getLogger(\"config\"),\n    trace = _getLogger.trace;\n\nvar _getConfig = getConfig(),\n    publicRuntimeConfig = _getConfig.publicRuntimeConfig;\n\nexport var NETWORK_TYPES = {\n  INFURA_MAINNET: \"INFURA_MAINNET\",\n  INFURA_ROPSTEN: \"INFURA_ROPSTEN\",\n  INJECTED: \"INJECTED\",\n  CUSTOM: \"CUSTOM\",\n  MOCK: \"MOCK\"\n};\nexport var URL = \"https://opencerts.io\";\nvar GA_PRODUCTION_ID = \"UA-130492260-1\";\nvar GA_DEVELOPMENT_ID = \"UA-130492260-2\"; // export const IS_MAINNET = publicRuntimeConfig.network === \"mainnet\";\n\nexport var IS_MAINNET = false;\nexport var DEFAULT_NETWORK = IS_MAINNET ? NETWORK_TYPES.INFURA_MAINNET : NETWORK_TYPES.INFURA_ROPSTEN;\nconsole.log(DEFAULT_NETWORK);\nconsole.log(DEFAULT_NETWORK);\nconsole.log(DEFAULT_NETWORK);\nconsole.log(DEFAULT_NETWORK);\nconsole.log(DEFAULT_NETWORK);\nconsole.log(DEFAULT_NETWORK);\nconsole.log(DEFAULT_NETWORK);\nconsole.log(DEFAULT_NETWORK);\nconsole.log(DEFAULT_NETWORK);\nconsole.log(DEFAULT_NETWORK);\nconsole.log(DEFAULT_NETWORK);\nconsole.log(DEFAULT_NETWORK);\nconsole.log(DEFAULT_NETWORK);\nexport var GA_ID = IS_MAINNET ? GA_PRODUCTION_ID : GA_DEVELOPMENT_ID;\nexport var CAPTCHA_CLIENT_KEY = \"6LfiL3EUAAAAAHrfLvl2KhRAcXpanNXDqu6M0CCS\";\nexport var EMAIL_API_URL = IS_MAINNET ? \"https://api.opencerts.io/email\" : \"https://api-ropsten.opencerts.io/email\";\nexport var INFURA_PROJECT_ID = \"1f1ff2b3fca04f8d99f67d465c59e4ef\";\nexport var LEGACY_OPENCERTS_RENDERER = publicRuntimeConfig.legacyRendererUrl || \"https://legacy.opencerts.io/\";\nexport var DEFAULT_SEO = {\n  title: \"Easily verify credentials\",\n  titleTemplate: \"Convergence - %s\",\n  description: \"Whether you're a student or an employer, Convergence lets you verify the certificates you have of anyone from any institution. All in one place.\",\n  openGraph: {\n    type: \"website\",\n    url: URL,\n    title: \"Convergence - Easily verify credentials\",\n    description: \"Whether you're a student or an employer, Convergence lets you verify the certificates you have of anyone from any institution. All in one place.\",\n    images: [{\n      url: \"\".concat(URL, \"/static/images/convergence.png\"),\n      width: 800,\n      height: 600,\n      alt: \"Convergence\"\n    }]\n  },\n  twitter: {\n    cardType: \"summary_large_image\"\n  }\n};\ntrace(\"DEFAULT_NETWORK: \".concat(DEFAULT_NETWORK));\ntrace(\"CAPTCHA_CLIENT_KEY: \".concat(CAPTCHA_CLIENT_KEY));\ntrace(\"EMAIL_API_URL: \".concat(EMAIL_API_URL));","map":{"version":3,"sources":["/home/ajl/development/ssi/academic-creds/convergence-credentials.github.io/src/config/index.js"],"names":["getConfig","getLogger","trace","publicRuntimeConfig","NETWORK_TYPES","INFURA_MAINNET","INFURA_ROPSTEN","INJECTED","CUSTOM","MOCK","URL","GA_PRODUCTION_ID","GA_DEVELOPMENT_ID","IS_MAINNET","DEFAULT_NETWORK","console","log","GA_ID","CAPTCHA_CLIENT_KEY","EMAIL_API_URL","INFURA_PROJECT_ID","LEGACY_OPENCERTS_RENDERER","legacyRendererUrl","DEFAULT_SEO","title","titleTemplate","description","openGraph","type","url","images","width","height","alt","twitter","cardType"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,aAAtB;AACA,SAASC,SAAT,QAA0B,iBAA1B;;iBAEkBA,SAAS,CAAC,QAAD,C;IAAnBC,K,cAAAA,K;;iBACwBF,SAAS,E;IAAjCG,mB,cAAAA,mB;;AAER,OAAO,IAAMC,aAAa,GAAG;AAC3BC,EAAAA,cAAc,EAAE,gBADW;AAE3BC,EAAAA,cAAc,EAAE,gBAFW;AAG3BC,EAAAA,QAAQ,EAAE,UAHiB;AAI3BC,EAAAA,MAAM,EAAE,QAJmB;AAK3BC,EAAAA,IAAI,EAAE;AALqB,CAAtB;AAQP,OAAO,IAAMC,GAAG,GAAG,sBAAZ;AAEP,IAAMC,gBAAgB,GAAG,gBAAzB;AACA,IAAMC,iBAAiB,GAAG,gBAA1B,C,CAEA;;AAEA,OAAO,IAAMC,UAAU,GAAG,KAAnB;AAEP,OAAO,IAAMC,eAAe,GAAGD,UAAU,GACrCT,aAAa,CAACC,cADuB,GAErCD,aAAa,CAACE,cAFX;AAKPS,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACAC,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACAC,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACAC,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACAC,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACAC,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACAC,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACAC,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACAC,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACAC,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACAC,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACAC,OAAO,CAACC,GAAR,CAAYF,eAAZ;AACAC,OAAO,CAACC,GAAR,CAAYF,eAAZ;AAEA,OAAO,IAAMG,KAAK,GAAGJ,UAAU,GAAGF,gBAAH,GAAsBC,iBAA9C;AACP,OAAO,IAAMM,kBAAkB,GAAG,0CAA3B;AACP,OAAO,IAAMC,aAAa,GAAGN,UAAU,GACnC,gCADmC,GAEnC,wCAFG;AAGP,OAAO,IAAMO,iBAAiB,GAAG,kCAA1B;AACP,OAAO,IAAMC,yBAAyB,GACpClB,mBAAmB,CAACmB,iBAApB,IAAyC,8BADpC;AAGP,OAAO,IAAMC,WAAW,GAAG;AACzBC,EAAAA,KAAK,EAAE,2BADkB;AAEzBC,EAAAA,aAAa,oBAFY;AAGzBC,EAAAA,WAAW,EACT,kJAJuB;AAKzBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,SADG;AAETC,IAAAA,GAAG,EAAEnB,GAFI;AAGTc,IAAAA,KAAK,EAAE,yCAHE;AAITE,IAAAA,WAAW,EACT,kJALO;AAMTI,IAAAA,MAAM,EAAE,CACN;AACED,MAAAA,GAAG,YAAKnB,GAAL,mCADL;AAEEqB,MAAAA,KAAK,EAAE,GAFT;AAGEC,MAAAA,MAAM,EAAE,GAHV;AAIEC,MAAAA,GAAG,EAAE;AAJP,KADM;AANC,GALc;AAoBzBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE;AADH;AApBgB,CAApB;AAyBPjC,KAAK,4BAAqBY,eAArB,EAAL;AACAZ,KAAK,+BAAwBgB,kBAAxB,EAAL;AACAhB,KAAK,0BAAmBiB,aAAnB,EAAL","sourcesContent":["import getConfig from \"next/config\";\nimport { getLogger } from \"../utils/logger\";\n\nconst { trace } = getLogger(\"config\");\nconst { publicRuntimeConfig } = getConfig();\n\nexport const NETWORK_TYPES = {\n  INFURA_MAINNET: \"INFURA_MAINNET\",\n  INFURA_ROPSTEN: \"INFURA_ROPSTEN\",\n  INJECTED: \"INJECTED\",\n  CUSTOM: \"CUSTOM\",\n  MOCK: \"MOCK\"\n};\n\nexport const URL = \"https://opencerts.io\";\n\nconst GA_PRODUCTION_ID = \"UA-130492260-1\";\nconst GA_DEVELOPMENT_ID = \"UA-130492260-2\";\n\n// export const IS_MAINNET = publicRuntimeConfig.network === \"mainnet\";\n\nexport const IS_MAINNET = false;\n\nexport const DEFAULT_NETWORK = IS_MAINNET\n  ? NETWORK_TYPES.INFURA_MAINNET\n  : NETWORK_TYPES.INFURA_ROPSTEN;\n\n\nconsole.log(DEFAULT_NETWORK)\nconsole.log(DEFAULT_NETWORK)\nconsole.log(DEFAULT_NETWORK)\nconsole.log(DEFAULT_NETWORK)\nconsole.log(DEFAULT_NETWORK)\nconsole.log(DEFAULT_NETWORK)\nconsole.log(DEFAULT_NETWORK)\nconsole.log(DEFAULT_NETWORK)\nconsole.log(DEFAULT_NETWORK)\nconsole.log(DEFAULT_NETWORK)\nconsole.log(DEFAULT_NETWORK)\nconsole.log(DEFAULT_NETWORK)\nconsole.log(DEFAULT_NETWORK)\n\nexport const GA_ID = IS_MAINNET ? GA_PRODUCTION_ID : GA_DEVELOPMENT_ID;\nexport const CAPTCHA_CLIENT_KEY = \"6LfiL3EUAAAAAHrfLvl2KhRAcXpanNXDqu6M0CCS\";\nexport const EMAIL_API_URL = IS_MAINNET\n  ? \"https://api.opencerts.io/email\"\n  : \"https://api-ropsten.opencerts.io/email\";\nexport const INFURA_PROJECT_ID = \"1f1ff2b3fca04f8d99f67d465c59e4ef\";\nexport const LEGACY_OPENCERTS_RENDERER =\n  publicRuntimeConfig.legacyRendererUrl || \"https://legacy.opencerts.io/\";\n\nexport const DEFAULT_SEO = {\n  title: \"Easily verify credentials\",\n  titleTemplate: `Convergence - %s`,\n  description:\n    \"Whether you're a student or an employer, Convergence lets you verify the certificates you have of anyone from any institution. All in one place.\",\n  openGraph: {\n    type: \"website\",\n    url: URL,\n    title: \"Convergence - Easily verify credentials\",\n    description:\n      \"Whether you're a student or an employer, Convergence lets you verify the certificates you have of anyone from any institution. All in one place.\",\n    images: [\n      {\n        url: `${URL}/static/images/convergence.png`,\n        width: 800,\n        height: 600,\n        alt: \"Convergence\"\n      }\n    ]\n  },\n  twitter: {\n    cardType: \"summary_large_image\"\n  }\n};\n\ntrace(`DEFAULT_NETWORK: ${DEFAULT_NETWORK}`);\ntrace(`CAPTCHA_CLIENT_KEY: ${CAPTCHA_CLIENT_KEY}`);\ntrace(`EMAIL_API_URL: ${EMAIL_API_URL}`);\n"]},"metadata":{},"sourceType":"module"}