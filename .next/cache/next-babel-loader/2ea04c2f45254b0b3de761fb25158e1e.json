{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { get, some, sortBy } from \"lodash\";\nimport DetailedCertificateVerifyBlock from \"./DetailedCertificateVerifyBlock\";\nimport { LOG_LEVEL } from \"./constants\";\nimport css from \"./certificateVerifyBlock.scss\";\nimport icons from \"../ViewerPageImages\";\n\nvar statusSummary = function statusSummary(_ref) {\n  var verifying = _ref.verifying,\n      hashStatus = _ref.hashStatus,\n      issuedStatus = _ref.issuedStatus,\n      notRevokedStatus = _ref.notRevokedStatus,\n      issuerIdentityStatus = _ref.issuerIdentityStatus;\n  if (verifying) return LOG_LEVEL.VERIFYING;\n  if (!verifying && hashStatus.verified && issuedStatus.verified && notRevokedStatus.verified && issuerIdentityStatus.verified) return LOG_LEVEL.VALID;\n  if (!verifying && hashStatus.verified && issuedStatus.verified && notRevokedStatus.verified && !issuerIdentityStatus.verified) return LOG_LEVEL.WARNING;\n  return LOG_LEVEL.INVALID;\n};\n\nvar renderIcon = function renderIcon(status) {\n  var icon;\n\n  switch (status) {\n    case LOG_LEVEL.CONNECTING:\n    case LOG_LEVEL.VERIFYING:\n      icon = __jsx(\"i\", {\n        id: \"verify-spinner\",\n        className: \"fa fa-spinner fa-spin fa-2x\"\n      });\n      break;\n\n    case LOG_LEVEL.VALID:\n      icon = icons.checkCircle();\n      break;\n\n    case LOG_LEVEL.WARNING:\n      icon = __jsx(\"i\", {\n        id: \"verify-warning\",\n        className: \"fas fa-exclamation-triangle fa-2x\"\n      });\n      break;\n\n    default:\n      icon = __jsx(\"i\", {\n        id: \"verify-invalid\",\n        className: \"fas fa-times-circle fa-2x\"\n      });\n  }\n\n  return __jsx(\"div\", {\n    className: \"d-flex justify-content-center align-items-center \".concat(css[\"verified-icon\"])\n  }, icon);\n};\n\nexport var getIdentityVerificationText = function getIdentityVerificationText(identityStatus) {\n  if (some(identityStatus, function (_ref2) {\n    var registry = _ref2.registry;\n    return !!registry;\n  })) {\n    return \"Accredited by SSG\";\n  } // note filter Boolean is to remove empty values\n\n\n  var dnsNames = sortBy(identityStatus, [\"dns\"]).map(function (_ref3) {\n    var dns = _ref3.dns;\n    return dns ? dns.toUpperCase() : null;\n  }).filter(Boolean);\n  return \"Issued by \".concat(dnsNames.length > 0 ? dnsNames[0] : \"Unknown\");\n};\n\nvar renderText = function renderText(status, props) {\n  var text;\n\n  switch (status) {\n    case LOG_LEVEL.CONNECTING:\n      text = \"Connecting ...\";\n      break;\n\n    case LOG_LEVEL.VERIFYING:\n      text = \"Verifying Certificate ...\";\n      break;\n\n    case LOG_LEVEL.VALID:\n      {\n        var identity = get(props, \"issuerIdentityStatus.identities\", []);\n        text = getIdentityVerificationText(identity);\n        break;\n      }\n\n    case LOG_LEVEL.WARNING:\n      text = \"Institution identity not verified\";\n      break;\n\n    default:\n      text = \"Invalid Certificate\";\n  }\n\n  return __jsx(\"div\", {\n    className: css[\"verification-text\"]\n  }, text);\n};\n\nvar SimpleVerifyBlock = function SimpleVerifyBlock(props) {\n  var status = statusSummary(props);\n  var renderedIcon = renderIcon(status);\n  var renderedText = renderText(status, props);\n  var stateStyle;\n\n  switch (status) {\n    case LOG_LEVEL.VALID:\n      stateStyle = \"valid\";\n      break;\n\n    case LOG_LEVEL.WARNING:\n      stateStyle = \"warning\";\n      break;\n\n    case LOG_LEVEL.INVALID:\n    default:\n      stateStyle = \"invalid\";\n  }\n\n  return __jsx(\"div\", {\n    className: \"p-2 pointer \".concat(css[\"simple-verify-block\"], \" \").concat(css[stateStyle], \" \").concat(props.detailedVerifyVisible ? css.active : \"\"),\n    onClick: props.toggleDetailedView,\n    id: \"certificate-status\"\n  }, __jsx(\"div\", {\n    className: \"row\",\n    style: {\n      flexWrap: \"inherit\"\n    }\n  }, renderedIcon, renderedText, __jsx(\"span\", {\n    // eslint-disable-next-line prettier/prettier\n    className: \"d-flex justify-content-center align-items-center \".concat(css.arrow)\n  }, icons.arrow())));\n};\n\nvar CertificateVerifyBlock = function CertificateVerifyBlock(props) {\n  var status = statusSummary(props);\n  return __jsx(\"div\", {\n    id: \"certificate-verify-block\",\n    className: \"align-items-start flex-nowrap \".concat(css[\"d-flex\"], \" \").concat(css.verifyBlocksContainer, \" mb-md-0 mb-3\")\n  }, __jsx(SimpleVerifyBlock, props), props.detailedVerifyVisible ? __jsx(DetailedCertificateVerifyBlock, {\n    statusSummary: status,\n    hashStatus: props.hashStatus,\n    issuedStatus: props.issuedStatus,\n    notRevokedStatus: props.notRevokedStatus,\n    issuerIdentityStatus: props.issuerIdentityStatus\n  }) : \"\");\n};\n\nexport default CertificateVerifyBlock;","map":null,"metadata":{},"sourceType":"module"}