{"ast":null,"code":"import { getLogger } from \"../../utils/logger\";\n\nvar _getLogger = getLogger(\"components:Analytics:\"),\n    trace = _getLogger.trace;\n\nvar _getLogger2 = getLogger(\"components:Analytics(Inactive):\"),\n    traceDev = _getLogger2.trace;\n\nexport var validateEvent = function validateEvent(_ref) {\n  var category = _ref.category,\n      action = _ref.action,\n      value = _ref.value;\n  if (!category) throw new Error(\"Category is required\");\n  if (!action) throw new Error(\"Action is required\");\n  if (value && typeof value !== \"number\") throw new Error(\"Value must be a number\");\n};\nexport var stringifyEvent = function stringifyEvent(_ref2) {\n  var category = _ref2.category,\n      action = _ref2.action,\n      label = _ref2.label,\n      value = _ref2.value;\n  return \"Category*: \".concat(category, \", Action*: \").concat(action, \", Label: \").concat(label, \", Value: \").concat(value);\n};\nexport var analyticsEvent = function analyticsEvent(window, evt) {\n  validateEvent(evt);\n\n  if (true && typeof window.ga !== \"undefined\") {\n    var category = evt.category,\n        action = evt.action,\n        label = evt.label,\n        value = evt.value;\n    trace(stringifyEvent(evt));\n    return window.ga(\"send\", \"event\", category, action, label, value);\n  }\n\n  traceDev(stringifyEvent(evt));\n  return null;\n};\nexport default analyticsEvent;","map":null,"metadata":{},"sourceType":"module"}