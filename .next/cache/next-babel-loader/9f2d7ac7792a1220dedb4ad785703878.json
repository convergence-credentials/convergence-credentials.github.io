{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/ajl/development/ssi/academic-creds/convergence-credentials.github.io/src/components/DecentralisedTemplateRenderer/DecentralisedRenderer.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport connectToChild from \"penpal/lib/connectToChild\";\nimport { getData, obfuscateDocument } from \"@govtechsg/open-attestation\";\nimport { get } from \"lodash\";\nimport { getCertificate, getActiveTemplateTab, updateObfuscatedCertificate as _updateObfuscatedCertificate, registerTemplates as registerTemplatesAction, selectTemplateTab as selectTemplateTabAction } from \"../../reducers/certificate\";\nimport { analyticsEvent } from \"../Analytics\";\nimport styles from \"../certificateViewer.scss\";\nimport { getDocumentIssuerStores } from \"../../utils/certificate\";\n\nvar DecentralisedRenderer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DecentralisedRenderer, _Component);\n\n  function DecentralisedRenderer(props) {\n    var _this;\n\n    _classCallCheck(this, DecentralisedRenderer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DecentralisedRenderer).call(this, props));\n    _this.state = {\n      childFrameConnection: null\n    };\n    return _this;\n  }\n\n  _createClass(DecentralisedRenderer, [{\n    key: \"selectTemplateTab\",\n    value: function () {\n      var _selectTemplateTab = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(i) {\n        var childFrameConnection, child;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                childFrameConnection = this.state.childFrameConnection;\n                _context.next = 3;\n                return childFrameConnection;\n\n              case 3:\n                child = _context.sent;\n                _context.next = 6;\n                return child.selectTemplateTab(i);\n\n              case 6:\n                this.props.selectTemplateTab(i);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function selectTemplateTab(_x) {\n        return _selectTemplateTab.apply(this, arguments);\n      }\n\n      return selectTemplateTab;\n    }()\n  }, {\n    key: \"updateHeight\",\n    value: function updateHeight(h) {\n      this.iframe.height = h;\n    }\n  }, {\n    key: \"updateTemplates\",\n    value: function updateTemplates(templates) {\n      if (!templates) return;\n      this.props.registerTemplates(templates);\n    }\n  }, {\n    key: \"handleObfuscation\",\n    value: function handleObfuscation(field) {\n      var updatedDocument = obfuscateDocument(this.props.document, field);\n      this.props.updateObfuscatedCertificate(updatedDocument);\n      var updatedCertificate = getData(updatedDocument);\n      this.renderDocument(updatedCertificate);\n    }\n  }, {\n    key: \"renderDocument\",\n    value: function () {\n      var _renderDocument = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(certificate) {\n        var childFrameConnection, child;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                childFrameConnection = this.state.childFrameConnection;\n                _context2.next = 3;\n                return childFrameConnection;\n\n              case 3:\n                child = _context2.sent;\n                _context2.next = 6;\n                return child.renderDocument(certificate);\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function renderDocument(_x2) {\n        return _renderDocument.apply(this, arguments);\n      }\n\n      return renderDocument;\n    }() // Do not re-render component if only activeTab changes\n\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      if (this.props.activeTab !== nextProps.activeTab && this.props.document === nextProps.document) {\n        this.selectTemplateTab(nextProps.activeTab);\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var iframe = this.iframe;\n      var updateHeight = this.updateHeight.bind(this);\n      var updateTemplates = this.updateTemplates.bind(this);\n      var handleObfuscation = this.handleObfuscation.bind(this);\n      var childFrameConnection = connectToChild({\n        iframe: iframe,\n        methods: {\n          updateHeight: updateHeight,\n          updateTemplates: updateTemplates,\n          handleObfuscation: handleObfuscation\n        }\n      }).promise;\n      this.setState({\n        childFrameConnection: childFrameConnection\n      });\n      childFrameConnection.then(function (frame) {\n        return frame.renderDocument(getData(_this2.props.certificate));\n      });\n      var certificateData = getData(this.props.certificate);\n      analyticsEvent(window, {\n        category: \"CERTIFICATE_VIEWED\",\n        action: getDocumentIssuerStores(certificateData),\n        label: get(certificateData, \"id\")\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(\"iframe\", {\n        title: \"Decentralised Rendered Certificate\",\n        id: \"iframe\",\n        className: styles[\"decentralised-renderer\"],\n        ref: function ref(iframe) {\n          _this3.iframe = iframe;\n        },\n        src: this.props.source,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return DecentralisedRenderer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    document: getCertificate(store),\n    activeTab: getActiveTemplateTab(store)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateObfuscatedCertificate: function updateObfuscatedCertificate(updatedDoc) {\n      return dispatch(_updateObfuscatedCertificate(updatedDoc));\n    },\n    registerTemplates: function registerTemplates(templates) {\n      return dispatch(registerTemplatesAction(templates));\n    },\n    selectTemplateTab: function selectTemplateTab(tabIndex) {\n      return dispatch(selectTemplateTabAction(tabIndex));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DecentralisedRenderer);\nDecentralisedRenderer.propTypes = {\n  document: PropTypes.object,\n  certificate: PropTypes.object,\n  source: PropTypes.string,\n  activeTab: PropTypes.number,\n  registerTemplates: PropTypes.func,\n  selectTemplateTab: PropTypes.func,\n  updateObfuscatedCertificate: PropTypes.func\n};","map":{"version":3,"sources":["/home/ajl/development/ssi/academic-creds/convergence-credentials.github.io/src/components/DecentralisedTemplateRenderer/DecentralisedRenderer.js"],"names":["React","Component","PropTypes","connect","connectToChild","getData","obfuscateDocument","get","getCertificate","getActiveTemplateTab","updateObfuscatedCertificate","registerTemplates","registerTemplatesAction","selectTemplateTab","selectTemplateTabAction","analyticsEvent","styles","getDocumentIssuerStores","DecentralisedRenderer","props","state","childFrameConnection","i","child","h","iframe","height","templates","field","updatedDocument","document","updatedCertificate","renderDocument","certificate","nextProps","activeTab","updateHeight","bind","updateTemplates","handleObfuscation","methods","promise","setState","then","frame","certificateData","window","category","action","label","source","mapStateToProps","store","mapDispatchToProps","dispatch","updatedDoc","tabIndex","propTypes","object","string","number","func"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport connectToChild from \"penpal/lib/connectToChild\";\nimport { getData, obfuscateDocument } from \"@govtechsg/open-attestation\";\nimport { get } from \"lodash\";\nimport {\n  getCertificate,\n  getActiveTemplateTab,\n  updateObfuscatedCertificate,\n  registerTemplates as registerTemplatesAction,\n  selectTemplateTab as selectTemplateTabAction\n} from \"../../reducers/certificate\";\nimport { analyticsEvent } from \"../Analytics\";\nimport styles from \"../certificateViewer.scss\";\nimport { getDocumentIssuerStores } from \"../../utils/certificate\";\n\nclass DecentralisedRenderer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      childFrameConnection: null\n    };\n  }\n\n  async selectTemplateTab(i) {\n    const { childFrameConnection } = this.state;\n    const child = await childFrameConnection;\n    await child.selectTemplateTab(i);\n    this.props.selectTemplateTab(i);\n  }\n\n  updateHeight(h) {\n    this.iframe.height = h;\n  }\n\n  updateTemplates(templates) {\n    if (!templates) return;\n    this.props.registerTemplates(templates);\n  }\n\n  handleObfuscation(field) {\n    const updatedDocument = obfuscateDocument(this.props.document, field);\n    this.props.updateObfuscatedCertificate(updatedDocument);\n    const updatedCertificate = getData(updatedDocument);\n    this.renderDocument(updatedCertificate);\n  }\n\n  async renderDocument(certificate) {\n    const { childFrameConnection } = this.state;\n    const child = await childFrameConnection;\n    await child.renderDocument(certificate);\n  }\n\n  // Do not re-render component if only activeTab changes\n  shouldComponentUpdate(nextProps) {\n    if (\n      this.props.activeTab !== nextProps.activeTab &&\n      this.props.document === nextProps.document\n    ) {\n      this.selectTemplateTab(nextProps.activeTab);\n      return false;\n    }\n    return true;\n  }\n\n  componentDidMount() {\n    const iframe = this.iframe;\n    const updateHeight = this.updateHeight.bind(this);\n    const updateTemplates = this.updateTemplates.bind(this);\n    const handleObfuscation = this.handleObfuscation.bind(this);\n    const childFrameConnection = connectToChild({\n      iframe,\n      methods: {\n        updateHeight,\n        updateTemplates,\n        handleObfuscation\n      }\n    }).promise;\n    this.setState({ childFrameConnection });\n\n    childFrameConnection.then(frame =>\n      frame.renderDocument(getData(this.props.certificate))\n    );\n\n    const certificateData = getData(this.props.certificate);\n    analyticsEvent(window, {\n      category: \"CERTIFICATE_VIEWED\",\n      action: getDocumentIssuerStores(certificateData),\n      label: get(certificateData, \"id\")\n    });\n  }\n\n  render() {\n    return (\n      <iframe\n        title=\"Decentralised Rendered Certificate\"\n        id=\"iframe\"\n        className={styles[\"decentralised-renderer\"]}\n        ref={iframe => {\n          this.iframe = iframe;\n        }}\n        src={this.props.source}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = store => ({\n  document: getCertificate(store),\n  activeTab: getActiveTemplateTab(store)\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateObfuscatedCertificate: updatedDoc =>\n    dispatch(updateObfuscatedCertificate(updatedDoc)),\n  registerTemplates: templates => dispatch(registerTemplatesAction(templates)),\n  selectTemplateTab: tabIndex => dispatch(selectTemplateTabAction(tabIndex))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DecentralisedRenderer);\n\nDecentralisedRenderer.propTypes = {\n  document: PropTypes.object,\n  certificate: PropTypes.object,\n  source: PropTypes.string,\n  activeTab: PropTypes.number,\n  registerTemplates: PropTypes.func,\n  selectTemplateTab: PropTypes.func,\n  updateObfuscatedCertificate: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}