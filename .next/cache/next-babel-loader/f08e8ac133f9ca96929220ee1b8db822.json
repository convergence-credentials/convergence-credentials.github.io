{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/home/ajl/development/ssi/academic-creds/convergence-credentials.github.io/src/components/HomePageContent/DropZoneSection.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport CertificateDropzone from \"../CertificateDropZone\";\nimport css from \"./dropZoneSection.scss\";\nimport { updateCertificate } from \"../../reducers/certificate\";\nimport { trace } from \"../../utils/logger\";\nimport { IS_MAINNET } from \"../../config\";\nimport MAIN from \"./Main-Demo\";\nimport ROPSTEN from \"./Ropsten-Demo\";\nimport { analyticsEvent } from \"../Analytics/index\";\nconst DEMO_CERT = IS_MAINNET ? MAIN : ROPSTEN;\nconst DEMO_CONTENT_KEY = \"DEMO_CONTENT\";\n\nfunction demoCount() {\n  analyticsEvent(window, {\n    category: \"USER_INTERACTION\",\n    action: \"DEMO_CERTIFICATE_VIEWED\"\n  });\n}\n\nconst DraggableDemoCertificate = () => __jsx(\"div\", {\n  className: \"d-none d-lg-block\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"row\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: \"col\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26\n  },\n  __self: this\n}, __jsx(\"div\", {\n  className: css.pulse,\n  draggable: \"true\",\n  onDragStart: e => e.dataTransfer.setData(DEMO_CONTENT_KEY, true),\n  onDragEnd: demoCount,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, __jsx(\"a\", {\n  href: `data:text/plain;,${_JSON$stringify(DEMO_CERT, null, 2)}`,\n  download: \"demo.opencert\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n}, __jsx(\"img\", {\n  style: {\n    cursor: \"grabbing\"\n  },\n  src: \"/static/images/dropzone/cert.png\",\n  width: \"100%\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n})))), __jsx(\"div\", {\n  className: \"col\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, __jsx(\"img\", {\n  src: \"/static/images/dropzone/arrow.png\",\n  width: \"100%\",\n  draggable: \"false\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}), __jsx(\"span\", {\n  style: {\n    textAlign: \"justify\",\n    color: \"#ff9933\"\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, \"Drag me over here to see a demo certificate and other features\"), __jsx(\"img\", {\n  // src=\"/static/images/convergence.png\"\n  width: \"100%\",\n  draggable: \"false\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}))));\n\nconst MobileDemoCertificate = () => __jsx(\"div\", {\n  className: \"d-block d-lg-none d-xl-none\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}, __jsx(\"a\", {\n  className: \"btn btn-primary btn-lg\",\n  role: \"button\",\n  draggable: \"false\",\n  id: \"demoClick\",\n  style: {\n    background: \"#28a745\",\n    border: \"none\",\n    cursor: \"pointer\"\n  },\n  onClick: demoCount,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, \"Click me for a demo certificate!\"));\n\nclass DropZoneSection extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"removeListener\", () => trace(\"drop listener removed\"));\n  }\n\n  componentDidMount() {\n    document.getElementById(\"demoDrop\").addEventListener(\"drop\", e => {\n      if (e.dataTransfer.getData(DEMO_CONTENT_KEY)) {\n        this.props.updateCertificate(DEMO_CERT);\n      }\n    });\n    document.getElementById(\"demoClick\").addEventListener(\"click\", () => {\n      this.props.updateCertificate(DEMO_CERT);\n    });\n  }\n\n  componentWillUnmount() {\n    document.getElementById(\"demoDrop\", \"demoClick\").removeEventListener(\"drop\", () => this.removeListener());\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    return __jsx(\"div\", {\n      className: \"row p-5 bg-brand-dark text-white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: css.main,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"col-lg-5 col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: css.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"An easy way to check and verify your certificates\"), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Whether you're a student or an employer, Convergence lets you verify the certificates you have of anyone from any institution. All in one place.\"), __jsx(DraggableDemoCertificate, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), __jsx(MobileDemoCertificate, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }))), __jsx(\"div\", {\n      className: \"col-lg-7 col-md-12 col-sm-12\",\n      id: \"demoDrop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, __jsx(CertificateDropzone, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCertificate: payload => dispatch(updateCertificate(payload))\n});\n\nexport default connect(null, mapDispatchToProps)(DropZoneSection);\nDropZoneSection.propTypes = {\n  updateCertificate: PropTypes.func\n};","map":{"version":3,"sources":["/home/ajl/development/ssi/academic-creds/convergence-credentials.github.io/src/components/HomePageContent/DropZoneSection.js"],"names":["React","Component","connect","PropTypes","CertificateDropzone","css","updateCertificate","trace","IS_MAINNET","MAIN","ROPSTEN","analyticsEvent","DEMO_CERT","DEMO_CONTENT_KEY","demoCount","window","category","action","DraggableDemoCertificate","pulse","e","dataTransfer","setData","cursor","textAlign","color","MobileDemoCertificate","background","border","DropZoneSection","componentDidMount","document","getElementById","addEventListener","getData","props","componentWillUnmount","removeEventListener","removeListener","render","main","description","mapDispatchToProps","dispatch","payload","propTypes","func"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport CertificateDropzone from \"../CertificateDropZone\";\nimport css from \"./dropZoneSection.scss\";\nimport { updateCertificate } from \"../../reducers/certificate\";\nimport { trace } from \"../../utils/logger\";\nimport { IS_MAINNET } from \"../../config\";\nimport MAIN from \"./Main-Demo\";\nimport ROPSTEN from \"./Ropsten-Demo\";\nimport { analyticsEvent } from \"../Analytics/index\";\n\nconst DEMO_CERT = IS_MAINNET ? MAIN : ROPSTEN;\nconst DEMO_CONTENT_KEY = \"DEMO_CONTENT\";\n\nfunction demoCount() {\n  analyticsEvent(window, {\n    category: \"USER_INTERACTION\",\n    action: \"DEMO_CERTIFICATE_VIEWED\"\n  });\n}\n\nconst DraggableDemoCertificate = () => (\n  <div className=\"d-none d-lg-block\">\n    <div className=\"row\">\n      <div className=\"col\">\n        <div\n          className={css.pulse}\n          draggable=\"true\"\n          onDragStart={e => e.dataTransfer.setData(DEMO_CONTENT_KEY, true)}\n          onDragEnd={demoCount}\n        >\n          <a\n            href={`data:text/plain;,${JSON.stringify(DEMO_CERT, null, 2)}`}\n            download=\"demo.opencert\"\n          >\n            <img\n              style={{ cursor: \"grabbing\" }}\n              src=\"/static/images/dropzone/cert.png\"\n              width=\"100%\"\n            />\n          </a>\n        </div>\n      </div>\n      <div className=\"col\">\n        <img\n          src=\"/static/images/dropzone/arrow.png\"\n          width=\"100%\"\n          draggable=\"false\"\n        />\n        <span\n          style={{\n            textAlign: \"justify\",\n            color: \"#ff9933\"\n          }}\n        >\n          Drag me over here to see a demo certificate and other features\n        </span>\n        <img\n          // src=\"/static/images/convergence.png\"\n          width=\"100%\"\n          draggable=\"false\"\n        />\n      </div>\n    </div>\n  </div>\n);\n\nconst MobileDemoCertificate = () => (\n  <div className=\"d-block d-lg-none d-xl-none\">\n    <a\n      className=\"btn btn-primary btn-lg\"\n      role=\"button\"\n      draggable=\"false\"\n      id=\"demoClick\"\n      style={{\n        background: \"#28a745\",\n        border: \"none\",\n        cursor: \"pointer\"\n      }}\n      onClick={demoCount}\n    >\n      Click me for a demo certificate!\n    </a>\n  </div>\n);\n\nclass DropZoneSection extends Component {\n  componentDidMount() {\n    document.getElementById(\"demoDrop\").addEventListener(\"drop\", e => {\n      if (e.dataTransfer.getData(DEMO_CONTENT_KEY)) {\n        this.props.updateCertificate(DEMO_CERT);\n      }\n    });\n    document.getElementById(\"demoClick\").addEventListener(\"click\", () => {\n      this.props.updateCertificate(DEMO_CERT);\n    });\n  }\n\n  componentWillUnmount() {\n    document\n      .getElementById(\"demoDrop\", \"demoClick\")\n      .removeEventListener(\"drop\", () => this.removeListener());\n  }\n\n  removeListener = () => trace(\"drop listener removed\");\n\n  // eslint-disable-next-line class-methods-use-this\n  render() {\n    return (\n      <div className=\"row p-5 bg-brand-dark text-white\">\n        <div className={css.main}>\n          <div className=\"col-lg-5 col-md-12\">\n            <div className={css.description}>\n              <h1>An easy way to check and verify your certificates</h1>\n              <p>\n                Whether you&#39;re a student or an employer, Convergence lets you\n                verify the certificates you have of anyone from any institution.\n                All in one place.\n              </p>\n              <DraggableDemoCertificate />\n              <MobileDemoCertificate />\n            </div>\n          </div>\n          <div className=\"col-lg-7 col-md-12 col-sm-12\" id=\"demoDrop\">\n            <CertificateDropzone />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCertificate: payload => dispatch(updateCertificate(payload))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(DropZoneSection);\n\nDropZoneSection.propTypes = {\n  updateCertificate: PropTypes.func\n};\n"]},"metadata":{},"sourceType":"module"}