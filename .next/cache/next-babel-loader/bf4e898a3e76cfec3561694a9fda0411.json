{"ast":null,"code":"var _jsxFileName = \"/home/ajl/development/ssi/academic-creds/convergence-credentials.github.io/src/components/CertificateDropZone/CertificateVerificationStatus.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport PropTypes from \"prop-types\";\nimport DefaultView from \"./Views/DefaultView\";\nimport VerifyingView from \"./Views/VerifyingView\";\nimport UnverifiedView from \"./Views/UnverifiedView\";\n\nconst CertificateVerificationStatus = props => {\n  const {\n    handleRenderOverwrite,\n    resetData,\n    verifying,\n    fileError,\n    issuerIdentityStatus,\n    hashStatus,\n    issuedStatus,\n    notRevokedStatus,\n    document,\n    verificationStatus,\n    storeStatus,\n    hover\n  } = props;\n\n  if (hover) {\n    return __jsx(DefaultView, {\n      hover: true,\n      accept: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  }\n\n  if (fileError) {\n    return __jsx(DefaultView, {\n      hover: true,\n      accept: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    });\n  }\n\n  if (verifying) {\n    return __jsx(VerifyingView, {\n      verificationStatus: verificationStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  }\n\n  if (document && (!hashStatus.verified || !issuedStatus.verified || !notRevokedStatus.verified || !issuerIdentityStatus.verified || !storeStatus.verified)) {\n    return __jsx(UnverifiedView, {\n      handleRenderOverwrite: handleRenderOverwrite,\n      resetData: () => resetData(),\n      hashStatus: hashStatus,\n      issuedStatus: issuedStatus,\n      notRevokedStatus: notRevokedStatus,\n      issuerIdentityStatus: issuerIdentityStatus,\n      storeStatus: storeStatus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    });\n  }\n\n  return __jsx(DefaultView, {\n    hover: false,\n    accept: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  });\n};\n\nCertificateVerificationStatus.propTypes = {\n  document: PropTypes.object,\n  resetData: PropTypes.func,\n  handleCertificateChange: PropTypes.func,\n  handleFileError: PropTypes.func,\n  handleRenderOverwrite: PropTypes.func,\n  updateCertificate: PropTypes.func,\n  fileError: PropTypes.bool,\n  verifying: PropTypes.bool,\n  issuerIdentityStatus: PropTypes.object,\n  hashStatus: PropTypes.object,\n  issuedStatus: PropTypes.object,\n  notRevokedStatus: PropTypes.object,\n  verificationStatus: PropTypes.array,\n  storeStatus: PropTypes.object,\n  hover: PropTypes.bool\n};\nexport default CertificateVerificationStatus;","map":{"version":3,"sources":["/home/ajl/development/ssi/academic-creds/convergence-credentials.github.io/src/components/CertificateDropZone/CertificateVerificationStatus.js"],"names":["PropTypes","DefaultView","VerifyingView","UnverifiedView","CertificateVerificationStatus","props","handleRenderOverwrite","resetData","verifying","fileError","issuerIdentityStatus","hashStatus","issuedStatus","notRevokedStatus","document","verificationStatus","storeStatus","hover","verified","propTypes","object","func","handleCertificateChange","handleFileError","updateCertificate","bool","array"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\n\nimport DefaultView from \"./Views/DefaultView\";\nimport VerifyingView from \"./Views/VerifyingView\";\nimport UnverifiedView from \"./Views/UnverifiedView\";\n\nconst CertificateVerificationStatus = props => {\n  const {\n    handleRenderOverwrite,\n    resetData,\n    verifying,\n    fileError,\n    issuerIdentityStatus,\n    hashStatus,\n    issuedStatus,\n    notRevokedStatus,\n    document,\n    verificationStatus,\n    storeStatus,\n    hover\n  } = props;\n  if (hover) {\n    return <DefaultView hover={true} accept={true} />;\n  }\n  if (fileError) {\n    return <DefaultView hover={true} accept={false} />;\n  }\n  if (verifying) {\n    return <VerifyingView verificationStatus={verificationStatus} />;\n  }\n  if (\n    document &&\n    (!hashStatus.verified ||\n      !issuedStatus.verified ||\n      !notRevokedStatus.verified ||\n      !issuerIdentityStatus.verified ||\n      !storeStatus.verified)\n  ) {\n    return (\n      <UnverifiedView\n        handleRenderOverwrite={handleRenderOverwrite}\n        resetData={() => resetData()}\n        hashStatus={hashStatus}\n        issuedStatus={issuedStatus}\n        notRevokedStatus={notRevokedStatus}\n        issuerIdentityStatus={issuerIdentityStatus}\n        storeStatus={storeStatus}\n      />\n    );\n  }\n  return <DefaultView hover={false} accept={true} />;\n};\n\nCertificateVerificationStatus.propTypes = {\n  document: PropTypes.object,\n  resetData: PropTypes.func,\n  handleCertificateChange: PropTypes.func,\n  handleFileError: PropTypes.func,\n  handleRenderOverwrite: PropTypes.func,\n  updateCertificate: PropTypes.func,\n  fileError: PropTypes.bool,\n  verifying: PropTypes.bool,\n  issuerIdentityStatus: PropTypes.object,\n  hashStatus: PropTypes.object,\n  issuedStatus: PropTypes.object,\n  notRevokedStatus: PropTypes.object,\n  verificationStatus: PropTypes.array,\n  storeStatus: PropTypes.object,\n  hover: PropTypes.bool\n};\n\nexport default CertificateVerificationStatus;\n"]},"metadata":{},"sourceType":"module"}