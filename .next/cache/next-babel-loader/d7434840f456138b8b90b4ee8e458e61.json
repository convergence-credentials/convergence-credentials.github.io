{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Router from \"next/router\";\nimport { getData } from \"@govtechsg/open-attestation\";\nimport { updateCertificate as _updateCertificate, sendCertificate as _sendCertificate, sendCertificateReset as _sendCertificateReset, getCertificate, getVerifying, getIssuerIdentityStatus, getHashStatus, getIssuedStatus, getNotRevokedStatus, getVerified, getEmailSendingState, updateObfuscatedCertificate as _updateObfuscatedCertificate } from \"../reducers/certificate\";\nimport CertificateViewer from \"./CertificateViewer\";\n\nvar MainPageContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MainPageContainer, _Component);\n\n  function MainPageContainer(props) {\n    var _this;\n\n    _classCallCheck(this, MainPageContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MainPageContainer).call(this, props));\n    _this.state = {\n      showSharing: false,\n      detailedVerifyVisible: false\n    };\n    _this.toggleDetailedView = _this.toggleDetailedView.bind(_assertThisInitialized(_this));\n    _this.handleCertificateChange = _this.handleCertificateChange.bind(_assertThisInitialized(_this));\n    _this.handleSharingToggle = _this.handleSharingToggle.bind(_assertThisInitialized(_this));\n    _this.handleSendCertificate = _this.handleSendCertificate.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(MainPageContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var document = this.props.document;\n\n      if (!document) {\n        Router.replace(\"/\");\n      }\n    }\n  }, {\n    key: \"handleSharingToggle\",\n    value: function handleSharingToggle() {\n      this.props.sendCertificateReset();\n      this.setState({\n        showSharing: !this.state.showSharing\n      });\n    }\n  }, {\n    key: \"toggleDetailedView\",\n    value: function toggleDetailedView() {\n      this.setState({\n        detailedVerifyVisible: !this.state.detailedVerifyVisible\n      });\n    }\n  }, {\n    key: \"handleCertificateChange\",\n    value: function handleCertificateChange(certificate) {\n      this.props.updateCertificate(certificate);\n    }\n  }, {\n    key: \"handleSendCertificate\",\n    value: function handleSendCertificate(_ref) {\n      var email = _ref.email,\n          captcha = _ref.captcha;\n      this.props.sendCertificate({\n        email: email,\n        captcha: captcha\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.document) return null;\n      return __jsx(CertificateViewer, {\n        document: this.props.document,\n        certificate: getData(this.props.document),\n        verifying: this.props.verifying,\n        hashStatus: this.props.hashStatus,\n        issuedStatus: this.props.issuedStatus,\n        notRevokedStatus: this.props.notRevokedStatus,\n        issuerIdentityStatus: this.props.issuerIdentityStatus,\n        handleCertificateChange: this.handleCertificateChange,\n        showSharing: this.state.showSharing,\n        emailAddress: this.state.emailAddress,\n        handleSendCertificate: this.handleSendCertificate,\n        handleSharingToggle: this.handleSharingToggle,\n        emailSendingState: this.props.emailSendingState,\n        toggleDetailedView: this.toggleDetailedView,\n        detailedVerifyVisible: this.state.detailedVerifyVisible\n      });\n    }\n  }]);\n\n  return MainPageContainer;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    document: getCertificate(store),\n    // Verification statuses used in verifier block\n    emailSendingState: getEmailSendingState(store),\n    verifying: getVerifying(store),\n    issuerIdentityStatus: getIssuerIdentityStatus(store),\n    hashStatus: getHashStatus(store),\n    issuedStatus: getIssuedStatus(store),\n    notRevokedStatus: getNotRevokedStatus(store),\n    verified: getVerified(store)\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateCertificate: function updateCertificate(payload) {\n      return dispatch(_updateCertificate(payload));\n    },\n    sendCertificate: function sendCertificate(payload) {\n      return dispatch(_sendCertificate(payload));\n    },\n    sendCertificateReset: function sendCertificateReset() {\n      return dispatch(_sendCertificateReset());\n    },\n    updateObfuscatedCertificate: function updateObfuscatedCertificate(updatedDoc) {\n      return dispatch(_updateObfuscatedCertificate(updatedDoc));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPageContainer);","map":null,"metadata":{},"sourceType":"module"}