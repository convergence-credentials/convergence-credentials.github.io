{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { filter } from \"lodash\";\nimport css from \"./registry.scss\";\nimport registry from \"../../static/registry.json\";\nimport Card from \"./UI/Card/card\";\n\nvar members = _Object$keys(registry.issuers).map(function (k) {\n  return _objectSpread({}, registry.issuers[k], {\n    address: k\n  });\n});\n\nvar partners = filter(members, \"displayCard\");\n\nvar renderMembers = function renderMembers() {\n  return partners.map(function (partner, index) {\n    return __jsx(Card, {\n      key: index,\n      info: partner\n    });\n  });\n};\n\nvar RegistryPage = function RegistryPage() {\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"container-fluid\",\n    style: {\n      backgroundColor: \"#324353\"\n    }\n  }, __jsx(\"div\", {\n    className: \"container bg-brand-dark text-white \".concat(css[\"r-section\"])\n  }, __jsx(\"h1\", {\n    className: \"col-12 \".concat(css[\"m-pd-0\"], \" \").concat(css[\"section-width\"])\n  }, \"Registry\")), __jsx(\"div\", {\n    className: \"container bg-brand-dark text-white \".concat(css[\"r-section\"])\n  }, __jsx(\"div\", {\n    className: css[\"section-width\"]\n  }, __jsx(\"div\", {\n    className: \"col-lg-6 col-md-12 my-3 \".concat(css[\"m-pd-0\"])\n  }, __jsx(\"p\", null, \"The registry is a list of recognised issuers with their certificate store addresses. Certificates from these issuers can be recognised and verified by our viewer.\"), __jsx(\"p\", null, \"Certificates with unverified issuer means that the certificate store address is not registered. This could mean that the issuer has not registered with OpenCerts.\"))))), __jsx(\"div\", {\n    className: \"row \".concat(css[\"r-section\"], \" \").concat(css[\"section-width\"])\n  }, renderMembers()));\n};\n\nexport default RegistryPage;","map":null,"metadata":{},"sourceType":"module"}